command_type: test
stepback: false
ignore:
    - "*.md" # don't schedule tests if a commit only changes markdown files
    - "*.rst" # don't schedule tests if a commit only changes rst files
    - ".github/*" # github CODEOWNERS configuration

#######################################
#         YAML Templates              #
#######################################
variables:
  - &run-build
    # runs a build operations. The task name in evergreen should
    # correspond to a make target for the build operation.
    name: test
    commands:
      - command: git.get_project
        type: system
        params:
          directory: gopath/src/github.com/mongodb/jasper
      - func: run-make
        vars: { target: "${task_name}" }

#######################################
#              Functions              #
#######################################
functions:
  run-make:
    command: subprocess.exec
    type: test
    params:
      working_dir: gopath/src/github.com/mongodb/jasper
      binary: make
      args: ["${make_args|}", "${target}"]
      env:
        GOPATH: ${workdir}/gopath
        GOROOT: ${goroot}
        GO_BIN_PATH: ${go_bin_path}
        RACE_DETECTOR: ${race_detector}
        DISABLE_COVERAGE: ${disable_coverage}

#######################################
#                Tasks                #
#######################################
post:
  - command: gotest.parse_files
    type: setup
    params:
      files:
        - "gopath/src/github.com/mongodb/jasper/build/output.*"

tasks:
  - <<: *run-build
    tags: ["test"]
    name: test-jasper

  - <<: *run-build
    tags: ["test"]
    name: test-cli

  - <<: *run-build
    tags: ["test"]
    name: test-options

  - <<: *run-build
    tags: ["test"]
    name: test-mock

  - <<: *run-build
    tags: ["test"]
    name: test-rest

  - <<: *run-build
    tags: ["test"]
    name: test-rpc

  - <<: *run-build
    tags: ["legacy-check"]
    name: compile-base

  - <<: *run-build
    tags: ["report"]
    name: lint

#######################################
#           Buildvariants             #
#######################################
buildvariants:
  - name: race-detector
    display_name: Race Detector (Arch Linux)
    expansions:
      goroot: /opt/golang/go1.11
      go_bin_path: /opt/golang/go1.11/bin/go
      disable_coverage: true
      race_detector: true
      make_args: -k
    run_on:
      - archlinux-test
      - archlinux-build
    tasks:
      - name: ".test"
      - name: ".report"

  - name: ubuntu1604
    display_name: Ubuntu 16.04
    expansions:
      disable_coverage: true
      goroot: /opt/golang/go1.11
      go_bin_path: /opt/golang/go1.11/bin/go
      make_args: -k
    run_on:
      - ubuntu1604-test
      - ubuntu1604-build
    tasks:
      - name: ".test"

  - name: ubuntu1604-go1.9
    display_name: Ubuntu 16.04 (go1.9)
    expansions:
      disable_coverage: true
      goroot: /opt/golang/go1.9
      go_bin_path: /opt/golang/go1.9/bin/go
      make_args: -k
    run_on:
      - ubuntu1604-test
      - ubuntu1604-build
    tasks:
      - name: ".legacy-check"

  - name: macos
    display_name: macOS
    expansions:
      disable_coverage: true
      goroot: /opt/golang/go1.11
      go_bin_path: /opt/golang/go1.11/bin/go
      make_args: -k
    run_on:
      - macos-1014
    tasks:
      - name: ".test"

  - name: windows
    display_name: Windows
    run_on:
      - windows-64-vs2015-small
      - windows-64-vs2015-test
      - windows-64-vs2015-compile
      - windows-64-vs2015-large
      - windows-64-vs2010-compile
      - windows-64-vs2010-test
      - windows-64-vs2013-compile
      - windows-64-vs2013-test
    expansions:
      disable_coverage: true
      goroot: C:/golang/go1.11
      go_bin_path: /cygdrive/c/golang/go1.11/bin/go
      make_args: -k
    tasks:
      - name: ".test"
